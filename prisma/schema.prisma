// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Profile {
  id     String @id @default(uuid()) @map("_id")
  userId String @unique

  name     String
  imageUrl String
  email    String

  ownedItems     InventoryItem[]
  uploadedImages Image[]
  messages       Message[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model InventoryItem {
  id String @id @default(uuid()) @map("_id")

  name  String
  count Int

  ownerId String
  owner   Profile @relation(fields: [ownerId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([ownerId])
}

model Image {
  id String @id @default(uuid()) @map("_id")

  url String

  ownerId String
  owner   Profile @relation(fields: [ownerId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([ownerId])
}

enum MessageRole {
  AI
  User
}

model Message {
  id String @id @default(uuid()) @map("_id")

  content String
  role    MessageRole

  senderId String
  sender   Profile @relation(fields: [senderId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
